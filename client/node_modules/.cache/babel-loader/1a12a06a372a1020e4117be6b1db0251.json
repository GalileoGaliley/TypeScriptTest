{"ast":null,"code":"import { StyleSheet } from 'react-native';\nexport function resolve(styleProp, cleanedProps) {\n  if (styleProp) {\n    return StyleSheet ? [styleProp, cleanedProps] : styleProp[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] ? Object.assign({}, ...styleProp, cleanedProps) : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AAGA,OAAO,SAASC,OAAT,CAAoBC,SAApB,EAA4CC,YAA5C,EAA6D;AAClE,MAAID,SAAJ,EAAe;AACb,WAAOF,UAAU,GACb,CAACE,SAAD,EAAYC,YAAZ,CADa,GAGfD,SAAS,gCAACE,MAAM,CAACC,QAAR,gBAATH,GACEI,MAAM,CAACC,MAAPD,CAAc,EAAdA,EAAkB,GAAGJ,SAArBI,EAAgCH,YAAhCG,CADFJ,GAEEI,MAAM,CAACC,MAAPD,CAAc,EAAdA,EAAkBJ,SAAlBI,EAA6BH,YAA7BG,CALJ;AADF,SAOO;AACL,WAAOH,YAAP;AAEH;AAAA","names":["StyleSheet","resolve","styleProp","cleanedProps","Symbol","iterator","Object","assign"],"sources":["/Users/nicole/form_auth/node_modules/react-native-svg/lib/module/lib/resolve.ts"],"sourcesContent":["import { StyleSheet } from 'react-native';\n\n// Kept in separate file, to avoid name collision with Symbol element\nexport function resolve<T>(styleProp: Iterable<T>, cleanedProps: T) {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}