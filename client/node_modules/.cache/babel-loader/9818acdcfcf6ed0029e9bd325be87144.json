{"ast":null,"code":"var _jsxFileName = \"/Users/nicole/form_auth/client/src/Components/AppRouter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { Account_Route, Login_Route } from \"../utils/constants\";\nimport AuthPage from \"../Pages/AuthPage\";\nimport Account from \"../Pages/Account\";\nimport { Context } from \"../index\";\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = _s(observer(_c = _s(() => {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    us\n  } = useContext(Context);\n  useEffect(() => {\n    let token = localStorage.getItem(\"token\");\n\n    if (token) {\n      us.setUser({\n        token: token\n      });\n      us.setAuth(true);\n      navigate('/account');\n    } else {\n      navigate('/login');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: Login_Route,\n      element: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: Account_Route,\n      element: /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}, \"lFOboZClf8sE8vjHMjgYkBRz3Xc=\", false, function () {\n  return [useNavigate];\n})), \"lFOboZClf8sE8vjHMjgYkBRz3Xc=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = AppRouter;\nexport default AppRouter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppRouter$observer\");\n$RefreshReg$(_c2, \"AppRouter\");","map":{"version":3,"sources":["/Users/nicole/form_auth/client/src/Components/AppRouter.tsx"],"names":["React","useContext","useEffect","Routes","Route","useNavigate","Account_Route","Login_Route","AuthPage","Account","Context","observer","AppRouter","navigate","us","token","localStorage","getItem","setUser","setAuth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAiCC,WAAjC,QAAmD,kBAAnD;AAEA,SAAQC,aAAR,EAAuBC,WAAvB,QAA6D,oBAA7D;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;;;AAEA,MAAMC,SAAS,MAAGD,QAAQ,SAAC,MAAM;AAAA;;AAC7B,MAAIE,QAAQ,GAAGR,WAAW,EAA1B;AACA,QAAM;AAACS,IAAAA;AAAD,MAAWb,UAAU,CAACS,OAAD,CAA3B;AACAR,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIa,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,QAAIF,KAAJ,EAAU;AACND,MAAAA,EAAE,CAACI,OAAH,CAAW;AAACH,QAAAA,KAAK,EAAEA;AAAR,OAAX;AACAD,MAAAA,EAAE,CAACK,OAAH,CAAW,IAAX;AACAN,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACH,KAJD,MAIM;AACFA,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACH;AACJ,GATQ,EASP,EATO,CAAT;AAUA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAIN,WAAf;AAA4B,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAID,aAAf;AAA8B,MAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApByB;AAAA,UACPD,WADO;AAAA,GAAX;AAAA,UACIA,WADJ;AAAA,EAAf;;MAAMO,S;AAsBN,eAAeA,SAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {Routes, Route, Navigate, useNavigate} from 'react-router-dom';\nimport {authRoutes, publicRoutes} from \"../routes\";\nimport {Account_Route, Login_Route, Registration_Route} from \"../utils/constants\";\nimport AuthPage from \"../Pages/AuthPage\";\nimport Account from \"../Pages/Account\";\nimport {Context} from \"../index\";\nimport {observer} from \"mobx-react-lite\";\n\nconst AppRouter = observer(() => {\n    let navigate = useNavigate();\n    const {us}:any = useContext(Context);\n    useEffect(()=>{\n        let token = localStorage.getItem(\"token\");\n        if (token){\n            us.setUser({token: token});\n            us.setAuth(true);\n            navigate('/account')\n        }else {\n            navigate('/login')\n        }\n    },[])\n    return (\n        <Routes >\n            <Route path = {Login_Route} element={<AuthPage/>}  />\n            <Route path = {Account_Route} element={<Account/>}  />\n\n        </Routes>\n    );\n});\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}