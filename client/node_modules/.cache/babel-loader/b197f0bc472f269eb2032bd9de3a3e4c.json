{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport jwt_decode from 'jwt-decode';\nexport const registration = async (login, email, password) => {\n  console.log('start');\n  const {\n    data\n  } = await $host.post('api/user/registration', {\n    login,\n    email,\n    password\n  });\n  console.log(data);\n  return data.code;\n};\nexport const login = async (loginOrEmail, password) => {\n  const {\n    data\n  } = await $host.post('api/user/login', {\n    loginOrEmail,\n    password\n  });\n  let user = jwt_decode(data.token);\n  console.log(user);\n  console.log(data.token);\n  return data.code;\n};\nexport const check = async () => {\n  try {\n    const {\n      data\n    } = await $authHost.get('api/user/auth');\n    localStorage.setItem('token', data.token);\n    return jwt_decode(data.token);\n  } catch (e) {\n    console.log(e);\n    console.log('error in userApi.Check');\n  }\n}; //\n// import {$authHost, $host} from \"./index\";\n// import jwt_decode from \"jwt-decode\";\n//\n// export const registration = async (email, password) => {\n//     const {data} = await $host.post('api/user/registration', {email, password, role: 'ADMIN'})\n//     localStorage.setItem('token', data.token)\n//     return jwt_decode(data.token)\n// }\n//\n// export const login = async (email, password) => {\n//     const {data} = await $host.post('api/user/login', {email, password})\n//     localStorage.setItem('token', data.token)\n//     return jwt_decode(data.token)\n// }\n//\n// export const check = async () => {\n//     const {data} = await $authHost.get('api/user/auth' )\n//     localStorage.setItem('token', data.token)\n//     return jwt_decode(data.token)\n// }","map":{"version":3,"sources":["/Users/nicole/form_auth/client/src/HTTP/userAPI.ts"],"names":["$authHost","$host","jwt_decode","registration","login","email","password","console","log","data","post","code","loginOrEmail","user","token","check","get","localStorage","setItem","e"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,KAAnB,QAA+B,SAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,KAAP,EAAqBC,KAArB,EAAmCC,QAAnC,KAAsD;AAC9EC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMR,KAAK,CAACS,IAAN,CAAW,uBAAX,EAAoC;AAACN,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAApC,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,SAAQA,IAAI,CAACE,IAAb;AACH,CALM;AAOP,OAAO,MAAMP,KAAK,GAAG,OAAOQ,YAAP,EAA4BN,QAA5B,KAA+C;AAEhE,QAAM;AAACG,IAAAA;AAAD,MAAS,MAAMR,KAAK,CAACS,IAAN,CAAW,gBAAX,EAA6B;AAACE,IAAAA,YAAD;AAAeN,IAAAA;AAAf,GAA7B,CAArB;AAEA,MAAIO,IAAI,GAAGX,UAAU,CAACO,IAAI,CAACK,KAAN,CAArB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACK,KAAjB;AACA,SAAQL,IAAI,CAACE,IAAb;AAGH,CAVM;AAYP,OAAO,MAAMI,KAAK,GAAG,YAAY;AAC7B,MAAI;AAEA,UAAM;AAACN,MAAAA;AAAD,QAAS,MAAMT,SAAS,CAACgB,GAAV,CAAc,eAAd,CAArB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BT,IAAI,CAACK,KAAnC;AACA,WAAOZ,UAAU,CAACO,IAAI,CAACK,KAAN,CAAjB;AAEH,GAND,CAMC,OAAOK,CAAP,EAAS;AACNZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;AACJ,CAXM,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {$authHost, $host} from \"./index\";\nimport jwt_decode from 'jwt-decode';\n\nexport const registration = async (login:string, email:string, password:string) =>{\n    console.log('start')\n    const {data} = await $host.post('api/user/registration', {login, email, password});\n    console.log(data)\n    return (data.code);\n};\n\nexport const login = async (loginOrEmail:string, password:string) =>{\n\n    const {data} = await $host.post('api/user/login', {loginOrEmail, password});\n   \n    let user = jwt_decode(data.token);\n    console.log(user)\n    console.log(data.token);\n    return (data.code);\n\n\n};\n\nexport const check = async () => {\n    try {\n\n        const {data} = await $authHost.get('api/user/auth' );\n        localStorage.setItem('token', data.token)\n        return jwt_decode(data.token)\n\n    }catch (e){\n        console.log(e);\n        console.log('error in userApi.Check')\n    }\n}\n\n//\n// import {$authHost, $host} from \"./index\";\n// import jwt_decode from \"jwt-decode\";\n//\n// export const registration = async (email, password) => {\n//     const {data} = await $host.post('api/user/registration', {email, password, role: 'ADMIN'})\n//     localStorage.setItem('token', data.token)\n//     return jwt_decode(data.token)\n// }\n//\n// export const login = async (email, password) => {\n//     const {data} = await $host.post('api/user/login', {email, password})\n//     localStorage.setItem('token', data.token)\n//     return jwt_decode(data.token)\n// }\n//\n// export const check = async () => {\n//     const {data} = await $authHost.get('api/user/auth' )\n//     localStorage.setItem('token', data.token)\n//     return jwt_decode(data.token)\n// }\n"]},"metadata":{},"sourceType":"module"}